services:
  # Caddy reverse proxy with automatic HTTPS
  caddy:
    image: caddy:2-alpine
    container_name: secure-app-caddy
    ports:
      - "8443:443"  # HTTPS
      - "8080:80"   # HTTP (redirects to HTTPS)
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./nginx/ssl:/etc/ssl/certs  # Reuse existing SSL certs
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    environment:
      - CADDY_ADMIN=localhost:2019

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: secure-app-backend
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/node_modules
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=myapp_db
      - DB_USERNAME=appuser
      - DB_PASSWORD=securepassword

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: secure-app-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend

  postgres:
    image: postgres:15
    container_name: secure-app-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: myapp_db
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: securepassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  caddy_logs: