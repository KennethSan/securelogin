events {
    worker_connections 1024;
}

http {
    # Simple upstream definitions
    upstream backend {
        server backend:8000;
    }

    upstream frontend {
        server frontend:5173;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    # Main HTTPS server - super simple!
    server {
        listen 443 ssl;
        server_name localhost;

        # Basic SSL
        ssl_certificate /etc/nginx/ssl/localhost.crt;
        ssl_certificate_key /etc/nginx/ssl/localhost.key;

        # Basic security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        # Explicitly route all /dev/ endpoints to the backend (bypass frontend)
        location /dev/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-XSRF-TOKEN $http_x_xsrf_token;
            proxy_set_header Cookie $http_cookie;
        }

        # API routes go to backend
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Sanctum CSRF cookie route
        location /sanctum/csrf-cookie {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Auth routes (login, register, etc.) go to backend
        location ~ ^/(login|register|logout|forgot-password|reset-password|dev/|test-login) {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Important: Pass CSRF token headers
            proxy_set_header X-XSRF-TOKEN $http_x_xsrf_token;
            proxy_set_header Cookie $http_cookie;
        }

        # Everything else goes to frontend (React app)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Support for Vite hot reload
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}